---
# tasks file for install-ckan

- name: Install apt requirements
  apt:
    pkg:
      "{{ apt_requirements }}"
  become: yes
  notify:
    - Start Postgresql
    - Start Redis

- name: Copy redis conf
  copy:
    src: redis.conf
    dest: /etc/redis/redis.conf
  become: yes
  notify: Start Redis
  when: configure_redis

- name: Install local ckan to virtual environment
  pip:
    name: "{{ ckan_source_path }}"
    virtualenv: "{{ virtual_env }}"
    editable: yes
  become: yes

- name: Install recommended setuptools
  pip:
    requirements: "{{ ckan_source_path }}/requirement-setuptools.txt"
    virtualenv: "{{ virtual_env }}"
  become: yes


- name: Install ckan requirements
  pip:
    requirements: "{{ ckan_source_path }}/{{ckan_requirements}}"
    virtualenv: "{{ virtual_env }}"
  become: yes

- name: Install ckan dev requirements
  pip:
    requirements: "{{ ckan_source_path }}/dev-requirements.txt"
    virtualenv: "{{ virtual_env }}"
  become: yes

- meta: flush_handlers

- name: Create databases
  postgresql_db:
    name: "{{ item }}"
  with_items:
    - ckan_default
    - ckan_test
  become: yes
  become_user: postgres

- name: Create Postgres users
  postgresql_user:
    db: "{{ item }}"
    user: "{{ item }}"
    password: pass
  with_items:
    - ckan_default
    - ckan_test
  become: yes
  become_user: postgres

- name: Create config file
  shell: "{{ virtual_env }}/bin/ckan generate config {{ ckan_source_path }}/CKAN-in-Vagrant/development.ini"
  args:
    creates: "{{ ckan_source_path }}/CKAN-in-Vagrant/development.ini"

- name: Create config directory
  file:
    dest: /etc/ckan/default
    state: directory
  become: yes

- name: Symlink config file to etc
  file:
    dest: /etc/ckan/default/development.ini
    src: "{{ ckan_source_path }}/CKAN-in-Vagrant/development.ini"
    state: link
    force: yes
  become: yes

- name: Add site_url to development.ini
  ini_file:
    path: "{{ ckan_source_path }}/CKAN-in-Vagrant/development.ini"
    section: app:main
    option: ckan.site_url
    value: "{{ ckan_site_url }}"

- name: Add solr_url to development.ini
  ini_file:
    path: "{{ ckan_source_path }}/CKAN-in-Vagrant/development.ini"
    section: app:main
    option: solr_url
    value: http://127.0.0.1:8983/solr/ckan

- name: Copy jetty configuration
  copy:
    src: "jetty9"
    dest: /etc/default/jetty9
  become: yes
  notify: Restart Jetty

- block:
  - name: Symlink schema.xml
    file:
      dest: /etc/solr/conf/schema.xml
      src: "{{ ckan_source_path }}/ckan/config/solr/schema.xml"
      state: link
      force: yes
    become: yes
    notify: Restart Jetty

  - name: Create systemd directory for jetty
    file:
      dest: /etc/systemd/system/jetty9.service.d
      state: directory
    become: yes

  - name: Copy solr.conf
    copy:
      src: "solr.conf"
      dest: /etc/systemd/system/jetty9.service.d/solr.conf
    become: yes
    notify: Restart Jetty

  - name: Reload systemd
    systemd:
      daemon-reload: true
    become: yes
  when: configure_jetty

- name: Copy solr-jetty.xml
  copy:
    src: "solr-jetty.xml"
    dest: /etc/solr/solr-jetty.xml
  become: yes
  notify: Restart Jetty

- name: Copy solr.xml to enable multicore for tests
  copy:
    dest: /usr/share/solr/solr.xml
    src: solr.xml
  become: yes
  notify: Restart Jetty

- name: Copy schema.xml on build
  copy:
    dest: /etc/solr/conf/schema.xml
    src: "{{ ckan_source_path }}/ckan/config/solr/schema.xml"
    force: yes
  become: yes
  notify: Restart Jetty
  when: not configure_jetty

- name: Copy solr core for multicore setup
  copy:
    src: /usr/share/solr/
    dest: /etc/solr/ckan
    remote_src: yes
  become: yes
  notify: Restart Jetty

- name: Copy who.ini in ckan (overrides symlink in reporisitory)
  copy:
    src: "{{ ckan_source_path }}/ckan/config/who.ini"
    dest: "{{ ckan_source_path }}/who.ini"

# In windows file system who.ini does not link to config
- name: Symlink who.ini
  file:
    dest: /etc/ckan/default/who.ini
    src: "{{ ckan_source_path }}/ckan/config/who.ini"
    state: link
  become: yes

- name: Create database tables
  shell: "{{ virtual_env }}/bin/ckan -c /etc/ckan/default/development.ini db init"
  become: yes
